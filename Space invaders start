#Space Invaders - Part 1
#Set up the screen
#Python 2.7 on Windows
import turtle
import os

#Set up the screen
wn = turtle.Screen()
wn.bgcolor("black")
wn.title("Space Invaders")

#Draw a border
border_pen = turtle.Turtle()
border_pen.speed(0)
border_pen.color("white")
border_pen.penup()
border_pen.setposition(-300,-300)
border_pen.pendown()
border_pen.pensize(3)
for side in range(4):
    border_pen.fd(600)
    border_pen.lt(90)
border_pen.hideturtle()


#Create the player turtle
player = turtle.Turtle()
player.color("blue")
player.shape("triangle")
player.penup()
player.speed(0)
player.setposition(0, -250)
player.setheading(90)

playerspeed = 15


#Create enemy
enemy = turtle.Turtle()
enemy.color("red")
enemy.shape("circle")
enemy.penup()
enemy.speed(0)
enemy.setposition(-200, 250)

enemyspeed = 2

#Creat player lazer
lazer = turtle.Turtle()
lazer.color("yellow")
lazer.shape("square")
lazer.penup()
lazer.speed(0)
lazer.setheading(90)
lazer.shapesize(0.5, 0.5)
lazer.hideturtle()

lazerspeed = 20

#Define lazer state
#ready - ready to fire
#fire - lazer is firing
lazerstate = "ready"

#Move player left and right
def move_left():
    x = player.xcor()
    x -= playerspeed
    if x < -280:
        x = -280
    player.setx(x)

def move_right():
    x = player.xcor()
    x += playerspeed
    if x > 280:
        x = 280
    player.setx(x)

def fire_lazer():
    #Declare bulletstate as a global if it needs changed
    global lazerstate

    #move lazer to ubove player
    x = player.xcor()
    y = player.ycor() + 10
    lazer.setposition(x, y)
    lazer.showturtle()
    



#Create keybord bindings
turtle.listen()
turtle.onkey(move_left, "Left")
turtle.onkey(move_right, "Right")
turtle.onkey(fire_lazer, "space")


#main game loop
while True:

    #move enemy
    x = enemy.xcor()
    x += enemyspeed
    enemy.setx(x)

#move enemy back and down
    if enemy.xcor() > 280:
        y = enemy.ycor()
        y -= 40
        enemyspeed *= -1
        enemy.sety(y)

    if enemy.xcor() < -280:
        y + enemy.xcor()
        y -= 40
        enemyspeed *= -1
        enemy.sety(y)
        
    #move the lazer
        y = lazer.ycor()
        y += lazerspeed
        lazer.sety(y)

        #Check if lazer reached top 






delay = raw_input("Press enter to finish.")

